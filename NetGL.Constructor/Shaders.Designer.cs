//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetGL.Constructor {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Shaders {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Shaders() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NetGL.Constructor.Shaders", typeof(Shaders).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to uniform vec4 uniform_Color = vec4(1.0);
        ///
        ///void getFragment(inout fragment_info fragment) {
        ///	fragment.emission = uniform_Color.xyz * frag_in.color.xyz;
        ///	fragment.albedo.w = uniform_Color.w * frag_in.color.w;
        ///}.
        /// </summary>
        internal static string Brokkoli_frag {
            get {
                return ResourceManager.GetString("Brokkoli_frag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to uniform float uniform_Weight;
        ///
        ///vec3 mod289(vec3 x) {
        ///	return x - floor(x * (1.0 / 289.0)) * 289.0;
        ///}
        ///
        ///vec4 mod289(vec4 x) {
        ///	return x - floor(x * (1.0 / 289.0)) * 289.0;
        ///}
        ///
        ///vec4 permute(vec4 x) {
        ///	return mod289(((x*34.0)+1.0)*x);
        ///}
        ///
        ///vec4 taylorInvSqrt(vec4 r) {
        ///	return 1.79284291400159 - 0.85373472095314 * r;
        ///}
        ///
        ///float snoise(vec3 v) { 
        ///	const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;
        ///	const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);
        ///	
        ///	// First corner
        ///	vec3 i  = floor(v + dot(v, C.yyy) );
        ///	vec3 x0 =   v - i + dot(i, C.xx [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Brokkoli_vert {
            get {
                return ResourceManager.GetString("Brokkoli_vert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 430
        ///#extension GL_ARB_compute_shader : enable
        ///#extension GL_ARB_shader_storage_buffer_object : enable
        ///
        ///struct particle{
        ///	vec4	currPos;
        ///	vec4	prevPos;
        ///};
        ///
        ///layout(std430, binding=0) buffer particles{
        ///	particle p[];
        ///};
        ///
        ///uniform vec4 attPos;
        ///uniform float frameTimeDiff;
        ///uniform uint maxParticles;
        ///
        ///layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
        ///void main(){
        ///	uint gid = gl_GlobalInvocationID.x;
        ///	
        ///	if(gid &lt;= maxParticles){
        ///		particle part = p[gid];
        ///		vec4 a, tempCurrPos;
        ///		
        ///		if(attPo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Dance_cs {
            get {
                return ResourceManager.GetString("Dance_cs", resourceCulture);
            }
        }
    }
}
